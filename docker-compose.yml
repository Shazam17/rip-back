version: "3.8"


volumes:
  postgres:

services:

  backend:
    build: .
    environment:
      - DB_HOST=pg
      - RABBIT_HOST=rabbitmq
    ports:
      - "3001:8080"
      - "3003:8081"
    depends_on:
      - "pg"
      - "rabbitmq"
    links:
      - pg
      - rabbitmq
      - migration

  pg:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
      POSTGRES_DB: rip
    ports:
      - "5432:5432"


  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq

    hostname: rabbit
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "4369:4369"
      - "5672:5672"
      - "15672:15672"
      - "25672:25672"
      - "35197:35197"


  migration:
    build: .
    environment:
      - DB_HOST=pg
      - RABBIT_HOST=rabbitmq
    ports:
      - "8081:8080"
    depends_on:
      - "pg"
      - "rabbitmq"
    links:
      - pg
      - rabbitmq
    command: ['npm','run','migrate']
    volumes:
      - postgres:/data/postgres:rw

  dbadapter:
    build: .
    environment:
      - DB_HOST=pg
      - RABBIT_HOST=rabbitmq
    ports:
      - "8082:8080"
    depends_on:
      - "pg"
      - "rabbitmq"
    command: ['npm','run','db:service']
    links:
      - pg
      - rabbitmq
      - migration
